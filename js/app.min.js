/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nif (window.innerWidth >= 1100) {\n    document.addEventListener('mouseover', documentActions);\n    document.addEventListener('mouseover', vehiclesMenu);\n} else {\n    document.addEventListener('click', documentActionsMobile);\n    document.addEventListener('click', vehiclesMenuMobile);\n}\n\nif (window.innerWidth >= 500) {\n    const main = document.querySelector('.main');\n    const footerBrands = document.querySelector('.footer__brands');\n\n    document.addEventListener('mouseover', countryAction);\n    main.addEventListener('mouseover', countryActionRemove);\n    footerBrands.addEventListener('mouseover', countryActionRemove);\n} else {\n}\n\n\n\nfunction documentActions(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-main]')) {\n        const subMenuId = targetElement.dataset.main ? targetElement.dataset.main : null;\n        const subMenu = document.querySelector(`[data-menu=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const block = document.querySelector('._block');\n            const texts = document.querySelectorAll('.nav__item-special p');\n            const navItems = document.querySelectorAll('.nav__item p');\n            navItems.forEach(navItem => {\n                const block = document.querySelector('._block');\n                const texts = document.querySelectorAll('.nav__item-special p');\n                if (block) {\n                    navItem.addEventListener('mouseenter', () => {\n                        block.classList.remove('_block');\n                        texts.forEach(text => {\n                            text.classList.remove('_rotate');\n                        })    \n                        document.body.classList.remove('_lock');\n                    })\n                }\n            })\n            if (block && block !== targetElement) {\n                block.classList.remove('_block');\n                texts.forEach(text => {\n                    text.classList.remove('_rotate');\n                })\n                targetElement.classList.remove('_rotate');\n                document.body.classList.remove('_lock');\n            }\n            subMenu.classList.add('_block');\n            targetElement.classList.add('_rotate');\n            searchInput.classList.remove('_show');\n            document.body.classList.add('_lock');\n            subMenu.addEventListener('mouseleave', () => {\n                subMenu.classList.remove('_block');\n                targetElement.classList.remove('_rotate');\n                document.body.classList.remove('_lock');\n            })\n            if (block) {\n                window.addEventListener('scroll', () => {\n                    block.classList.remove('_block');\n                    targetElement.classList.remove('_rotate');\n                    document.body.classList.remove('_lock');\n                    texts.forEach(text => {\n                        text.classList.remove('_rotate');\n                    })    \n                })\n            }\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\n\nfunction vehiclesMenu(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-submenu]')) {\n        const subMenuId = targetElement.dataset.submenu ? targetElement.dataset.submenu : null;\n        const subMenu = document.querySelector(`[data-content=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const block = document.querySelector('._submenu');\n            const texts = document.querySelectorAll('._nav__special-type');\n            if (block && block !== subMenu) {\n                block.classList.remove('_submenu');\n                texts.forEach(text => {\n                    if (text !== targetElement) {\n                        text.classList.remove('_nav__special-type');\n                    }\n                })\n            }\n            subMenu.classList.add('_submenu');\n            targetElement.classList.add('_nav__special-type');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nfunction documentActionsMobile(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-main]')) {\n        const subMenuId = targetElement.dataset.main ? targetElement.dataset.main : null;\n        const subMenu = document.querySelector(`[data-menu=\"${subMenuId}\"]`);\n        if (subMenu) {\n            subMenu.classList.toggle('_block');\n            targetElement.classList.toggle('_rotate');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nfunction vehiclesMenuMobile(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-submenu]')) {\n        const subMenuId = targetElement.dataset.submenu ? targetElement.dataset.submenu : null;\n        const subMenu = document.querySelector(`[data-mobile=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const block = document.querySelector('._submenu');\n            const texts = document.querySelectorAll('._nav__special-type');\n            if (block && block !== subMenu) {\n                block.classList.remove('_submenu');\n                texts.forEach(text => {\n                    if (text !== targetElement) {\n                        text.classList.remove('_nav__special-type');\n                    }\n                })\n            }\n            subMenu.classList.add('_submenu');\n            targetElement.classList.add('_nav__special-type');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nconst searchInput = document.querySelector('.header__search-input');\nconst searchBtn = document.querySelector('.header__search-icon');\n\nsearchBtn.addEventListener('click', () => {\n    const block = document.querySelector('._block');\n    const rotate = document.querySelector('._rotate');\n    if (block) {\n        block.classList.remove('_block');\n    }\n    if (rotate) {\n        rotate.classList.remove('_rotate');\n    }\n    searchInput.classList.toggle('_show');\n    burger.classList.remove('_active');\n    nav.classList.remove('_active');\n    header.classList.remove('_active');\n    header.classList.remove('_overflow');\n    document.body.classList.remove('_lock');\n})\n\nwindow.addEventListener('scroll', () => {\n    searchInput.classList.remove('_show');\n    document.body.classList.remove('_lock');\n})\n\nconst burger = document.querySelector('.burger');\nconst nav = document.querySelector('.nav');\nconst header = document.querySelector('.header');\n\nburger.addEventListener('click', () => {\n    const blocks = document.querySelectorAll('._block');\n    const rotates = document.querySelectorAll('._rotate');\n    const navSpecialTypes = document.querySelectorAll('._nav__special-type');\n    blocks.forEach(block => {\n        block.classList.remove('_block')\n    })\n    rotates.forEach(rotate => {\n        rotate.classList.remove('_rotate')\n    })\n    navSpecialTypes.forEach(navSpecialType => {\n        navSpecialType.classList.remove('_nav__special')\n    })\n    burger.classList.toggle('_active');\n    nav.classList.toggle('_active');\n    header.classList.toggle('_active');\n    header.classList.toggle('_overflow');\n    searchInput.classList.remove('_show');\n    contactOpen.classList.toggle('_none');\n    document.body.classList.toggle('_lock');\n})\n\n// =========================================================\n\nconst swiper = new Swiper('.slider', {\n    loop: true,\n    keyboard: {\n        enabled: true,\n    },\n    autoplay: {\n        delay: 10000,\n        pauseOnMouseEnter: true,\n    },\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n    },\n  });\n\n// ======================================================\n\nconst aboutBtn = document.querySelector('.about__btn');\nconst aboutMore = document.querySelector('.about__more');\n\naboutBtn.addEventListener('click', () => {\n    aboutBtn.classList.toggle('_active');\n    aboutMore.classList.toggle('_active');\n})\n\n// =================================================\n\ndocument.addEventListener('click', chooseAction);\n\nfunction chooseAction(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-choose]')) {\n        const chooseElId = targetElement.dataset.choose ? targetElement.dataset.choose : null;\n        const chooseEl = document.querySelector(`[data-chosen=\"${chooseElId}\"]`);\n        if (chooseEl) {\n            const chosens = document.querySelectorAll('._chosen');\n            chosens.forEach(chosen => {\n                if (chosen && chosen !== targetElement) {\n                    chosen.classList.remove('_chosen');\n                    targetElement.classList.remove('_chosen');\n                }\n            })\n            targetElement.classList.add('_chosen');\n            chooseEl.classList.add('_chosen');\n        } else {\n            console.log('item does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\n// =====================================================\n\nconst featured = new Swiper('.featured__slider', {\n    height: 400,\n    spaceBetween: 15,\n    navigation: {\n        prevEl: '.featured__button-prev',\n        nextEl: '.featured__button-next',\n    },\n    keyboard: {\n        enabled: true,\n    },\n    mousewheel: {\n        sensitivity: 1,\n    },\n    breakpoints: {\n        320: {\n            slidesPerView: 1.2,\n        },\n        360: {\n            slidesPerView: 1.3,\n        },\n        390: {\n            slidesPerView: 1.4,\n        },\n        440: {\n            slidesPerView: 1.6,\n        },\n        500: {\n            slidesPerView: 1.6,\n        },\n        680: {\n            slidesPerView: 2.1,\n        },\n        950: {\n            slidesPerView: 2.6,\n        },\n        1200: {\n            slidesPerView: 3.2,\n        },\n    }\n  });\n  \n  // =================================================\n  \nconst news = new Swiper('.news__slider', {\n    spaceBetween: 15,\n    navigation: {\n        prevEl: '.news__button-prev',\n        nextEl: '.news__button-next',\n    },\n    keyboard: {\n        enabled: true,\n    },\n    mousewheel: {\n        sensitivity: 1,\n    },\n    breakpoints: {\n        320: {\n            slidesPerView: 1.1,\n        },\n        500: {\n            slidesPerView: 1.4,\n        },\n        680: {\n            slidesPerView: 2.1,\n        },\n        950: {\n            slidesPerView: 2.6,\n        },\n        1100: {\n            slidesPerView: 1.2,\n        },\n        1250: {\n            slidesPerView: 1.4,\n        },\n    }\n});\n\n// ====================================\n\nconst contact = document.querySelector('.contact');\nconst contactForm = document.querySelector('.contact__form');\nconst contactCross = document.querySelector('.contact__cross');\nconst contactBg = document.querySelector('.contact__bg');\nconst headerContact = document.querySelector('#headerContact');\nconst contactOpen = document.querySelector('.contact__open');\n\nheaderContact.addEventListener('click', contactFormOpen);\ncontactOpen.addEventListener('click', contactFormOpen);\n\ncontactCross.addEventListener('click', contactFormClose);\ncontactBg.addEventListener('click', contactFormClose);\n\nfunction contactFormClose() {\n    contact.classList.remove('_block');\n    contactForm.classList.remove('_block');\n    contactBg.classList.remove('_block');\n    contactOpen.classList.remove('_none');\n    document.body.classList.remove('_lock');\n}\n\nfunction contactFormOpen() {\n    contact.classList.add('_block');\n    contactForm.classList.add('_block');\n    contactBg.classList.add('_block');\n    burger.classList.remove('_active');\n    nav.classList.remove('_active');\n    header.classList.remove('_active');\n    header.classList.remove('_overflow');\n    searchInput.classList.remove('_show');\n    document.body.classList.add('_lock');\n}\n\n// =======================================\n\nfunction countryAction(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-icon]')) {\n        const iconId = targetElement.dataset.icon ? targetElement.dataset.icon : null;\n        const country = document.querySelector(`[data-country=\"${iconId}\"]`);\n        if (country) {\n            const hovereds = document.querySelectorAll('._hovered');\n            const countries = document.querySelectorAll('._showed');\n            hovereds.forEach(hovered => {\n                hovered.classList.remove('_hovered');\n            })\n            countries.forEach(country => {\n                country.classList.remove('_showed');\n            })\n            targetElement.classList.add('_hovered');\n            country.classList.add('_showed');\n        } else {\n            console.log('country does not exist');\n        }\n    }\n}\n\nfunction countryActionRemove() {\n    const hovereds = document.querySelectorAll('._hovered');\n    const countries = document.querySelectorAll('._showed');\n    if (hovereds) {\n        hovereds.forEach(hovered => {\n            hovered.classList.remove('_hovered');\n        })\n    }\n    if (countries) {\n        countries.forEach(country => {\n            country.classList.remove('_showed');\n        })\n    }\n}\n\n//# sourceURL=webpack://cars/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;