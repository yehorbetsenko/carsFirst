/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nif (window.innerWidth >= 1100) {\n    document.addEventListener('mouseover', documentActions);\n    document.addEventListener('mouseover', vehiclesMenu);\n} else {\n    document.addEventListener('click', documentActionsMobile);\n    document.addEventListener('click', vehiclesMenuMobile);\n}\n\n\n\nfunction documentActions(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-main]')) {\n        const subMenuId = targetElement.dataset.main ? targetElement.dataset.main : null;\n        const subMenu = document.querySelector(`[data-menu=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const block = document.querySelector('._block');\n            const texts = document.querySelectorAll('.nav__item-special p');\n            if (block && block !== targetElement) {\n                block.classList.remove('_block');\n                texts.forEach(text => {\n                    text.classList.remove('_rotate');\n                })\n                targetElement.classList.remove('_rotate');\n            }\n            subMenu.classList.add('_block');\n            targetElement.classList.add('_rotate');\n            searchInput.classList.remove('_show');\n            subMenu.addEventListener('mouseleave', () => {\n                subMenu.classList.remove('_block');\n                targetElement.classList.remove('_rotate');\n            })\n            if (block) {\n                window.addEventListener('scroll', () => {\n                    block.classList.remove('_block');\n                    targetElement.classList.remove('_rotate');\n                    texts.forEach(text => {\n                        text.classList.remove('_rotate');\n                    })    \n                })\n            }\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nfunction vehiclesMenu(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-submenu]')) {\n        const subMenuId = targetElement.dataset.submenu ? targetElement.dataset.submenu : null;\n        const subMenu = document.querySelector(`[data-content=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const block = document.querySelector('._submenu');\n            if (block && block !== targetElement) {\n                block.classList.remove('_submenu');\n            }\n            subMenu.classList.toggle('_submenu');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nfunction documentActionsMobile(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-main]')) {\n        const subMenuId = targetElement.dataset.main ? targetElement.dataset.main : null;\n        const subMenu = document.querySelector(`[data-menu=\"${subMenuId}\"]`);\n        if (subMenu) {\n            subMenu.classList.toggle('_move');\n            targetElement.classList.toggle('_rotate');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nfunction vehiclesMenuMobile(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-submenu]')) {\n        const subMenuId = targetElement.dataset.submenu ? targetElement.dataset.submenu : null;\n        const subMenu = document.querySelector(`[data-content=\"${subMenuId}\"]`);\n        if (subMenu) {\n            const move = document.querySelector('._menu');\n            const texts = document.querySelectorAll('.nav__vehicles-type');\n            if (move && move !== targetElement) {\n                move.classList.remove('_menu');\n                texts.forEach(text => {\n                    text.classList.remove('_rotate');\n                })\n                targetElement.classList.remove('_rotate');\n            }\n            if (move && move !== targetElement) {\n                move.classList.remove('_menu');\n            }\n            subMenu.classList.toggle('_menu');\n            targetElement.classList.toggle('_rotate');\n        } else {\n            console.log('submenu does not exist');\n        }\n        e.preventDefault();\n    }\n}\n\nconst searchInput = document.querySelector('.header__search-input');\nconst searchBtn = document.querySelector('.header__search-icon');\n\nsearchBtn.addEventListener('click', () => {\n    searchInput.classList.toggle('_show');\n    burger.classList.remove('_active');\n    nav.classList.remove('_active');\n    header.classList.remove('_active');\n    header.classList.remove('_overflow');\n})\n\nwindow.addEventListener('scroll', () => {\n    searchInput.classList.remove('_show');\n})\n\nconst burger = document.querySelector('.burger');\nconst nav = document.querySelector('.nav');\nconst header = document.querySelector('.header');\n\nburger.addEventListener('click', () => {\n    burger.classList.toggle('_active');\n    nav.classList.toggle('_active');\n    header.classList.toggle('_active');\n    header.classList.toggle('_overflow');\n    searchInput.classList.remove('_show');\n})\n\n// =========================================================\n\nconst swiper = new Swiper('.swiper', {\n    loop: true,\n    keyboard: {\n        enabled: true,\n    },\n    autoplay: {\n        delay: 7000,\n        pauseOnMouseEnter: true,\n    },\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n    },\n  });\n\n// ======================================================\n\nconst aboutBtn = document.querySelector('.about__btn');\nconst aboutMore = document.querySelector('.about__more');\n\naboutBtn.addEventListener('click', () => {\n    aboutBtn.classList.toggle('_active');\n    aboutMore.classList.toggle('_active');\n})\n\n// =================================================\n\ndocument.addEventListener('click', chooseAction);\n\nfunction chooseAction(e) {\n    const targetElement = e.target;\n    if (targetElement.closest('[data-choose]')) {\n        const chooseElId = targetElement.dataset.choose ? targetElement.dataset.choose : null;\n        const chooseEl = document.querySelector(`[data-chosen=\"${chooseElId}\"]`);\n        if (chooseEl) {\n            const chosens = document.querySelectorAll('._chosen');\n            chosens.forEach(chosen => {\n                if (chosen && chosen !== targetElement) {\n                    chosen.classList.remove('_chosen');\n                    targetElement.classList.remove('_chosen');\n                }\n            })\n            targetElement.classList.add('_chosen');\n            chooseEl.classList.add('_chosen');\n        } else {\n            console.log('item does not exist');\n        }\n        e.preventDefault();\n    }\n\n}\n\n// =====================================================\n\n\n\n//# sourceURL=webpack://cars/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;